1) FIND 5 OLDEST USERS
 
    SELECT ID,USERNAME, CREATED_AT
    FROM USERS
    ORDER BY CREATED_AT ASC;

    SELECT*FROM USERS
    ORDER BY CREATED_AT
    LIMIT 5;


2) WHAT DAYS OF THE WEEK DO MOST USERS REGISTER ON?

    SELECT
    DAYNAME(CREATED_AT) AS DAY_OF_THE_WEEK,
    COUNT(*) AS TOTAL_COUNT
    FROM USERS
    GROUP BY DAY_OF_THE_WEEK
    ORDER BY TOTAL_COUNT DESC;

3) FIND THE USERS WHO HAVE NEVER POSTED A PHOTO ?

    SELECT
    USERS.ID,USERNAME,
    USERS.CREATED_AT AS USER_JOINING_DATE
    FROM USERS
    LEFT JOIN PHOTOS
    ON USERS.ID = PHOTOS.USER_ID
    WHERE PHOTOS.USER_ID IS  NULL;

4) FIND OUT WHO WON THE CONTEST ?

     SELECT
     USERS.ID AS USER_ID,
     USERNAME,
     PHOTOS.ID AS PHOTO_ID,
     PHOTOS.IMAGE_URL,
     COUNT(*) AS TOTAL_LIKES_COUNT
     FROM PHOTOS
     JOIN LIKES
     ON PHOTOS.ID=LIKES.PHOTO_ID
     JOIN USERS
     ON USERS.ID=PHOTOS.USER_ID
     GROUP BY PHOTOS.ID
     ORDER BY TOTAL_LIKES_COUNT DESC
     LIMIT 1;


 5) HOW MANY TIMES DOES THE AVG USER POST?

    SELECT
    ROUND(
    (SELECT COUNT(*) FROM PHOTOS)/ (SELECT COUNT(*) FROM USERS))
     AS AVERAGE_USER_POST;

 6) WHAT ARE THE TOP 5 MOST COMMONLY USED HASHTAGS?

     SELECT
     TAGS.ID AS TAG_ID,
     TAGS.TAG_NAME,
     COUNT(*) AS TOTAL_TAGS_COUNT
     FROM TAGS
     JOIN PHOTO_TAGS
     ON TAGS.ID = PHOTO_TAGS.TAG_ID
     GROUP BY TAGS.ID
     ORDER BY TOTAL_TAGS_COUNT DESC
     LIMIT 5;

7) FIND THE NO.OF USERS WHO HAVE LIKED EVERY SINGLE PHOTO ON THE SITE?

     SELECT
     USERS.ID AS USER_ID,
     USERS.USERNAME,
     COUNT(*) AS TOTAL_USER_LIKES
     FROM USERS
     JOIN LIKES
     ON USERS.ID = LIKES.USER_ID
     GROUP BY USERS.ID
     HAVING TOTAL_USER_LIKES =
     (SELECT COUNT(*) FROM PHOTOS);













